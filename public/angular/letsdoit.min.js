(function(){angular.module("letsdoitApp",["ngRoute","ngSanitize","ui.bootstrap"]);function t(t,e){t.when("/",{templateUrl:"lists/lists.view.html",controller:"listCtrl",controllerAs:"vm"}).when("/about",{templateUrl:"/common/views/genericText.view.html",controller:"aboutCtrl",controllerAs:"vm"}).when("/lists/:listId",{templateUrl:"/taskDetailsEdit/taskDetailsEdit.view.html",controller:"taskCtrlDetailsEdit",controllerAs:"vm"}).when("/register",{templateUrl:"/auth/register/register.view.html",controller:"registerCtrl",controllerAs:"vm"}).when("/login",{templateUrl:"/auth/login/login.view.html",controller:"loginCtrl",controllerAs:"vm"}).otherwise({redirectTo:"/"});e.html5Mode(true)}angular.module("letsdoitApp").config(["$routeProvider","$locationProvider",t])})();(function(){var t=function(t,e){var r=function(){return t.get("/api/tasks",{header:{Authorization:"Bearer "+e.getToken()}})};var o=function(r){return t.get("/api/tasks/"+r,{header:{Authorization:"Bearer "+e.getToken()}})};var n=function(r){return t.post("/api/tasks/new",r,{header:{Authorization:"Bearer "+e.getToken()}})};return{tasksList:r,taskById:o,addNewTask:n}};t.$inject=["$http","authentication"];angular.module("letsdoitApp").service("letsdoitData",t)})();(function(){function t(t,e){if(window.location.pathname!=="/"){window.location.href="/#"+window.location.pathname}var r=this;r.pageHeader={title:"Tasks"};r.message="Loading your Tasks List . . .";t.tasksList().success(function(t){r.message=t.length>0?"":"Hurray! No more tasks left.";r.data={tasks:t};console.log(r.data)}).error(function(t){r.message="Sorry, something's gone wrong. Please Try again"});r.popupAddTask=function(){var t=e.open({templateUrl:"/addTaskModal/addTaskModal.view.html",controller:"addTaskModalCtrl as vm"});t.result.then(function(t){r.data.tasks.push(t)})}}t.$inject=["letsdoitData","$uibModal"];angular.module("letsdoitApp").controller("listCtrl",t)})();(function(){angular.module("letsdoitApp").directive("footerGeneric",t);function t(){return{restrict:"EA",templateUrl:"/common/directives/footerGeneric/footerGeneric.template.html"}}})();(function(){angular.module("letsdoitApp").directive("navigation",t);function t(){return{restrict:"EA",templateUrl:"/common/directives/navigation/navigation.template.html",controller:"navigationCtrl as navvm"}}})();(function(){angular.module("letsdoitApp").directive("pageHeader",t);function t(){return{restrict:"EA",scope:{content:"=content"},templateUrl:"/common/directives/pageHeader/pageHeader.template.html"}}})();(function(){angular.module("letsdoitApp").controller("aboutCtrl",t);function t(){var t=this;t.title="About LetsDoIt";t.main={content:"LetsDoIt is a task todolist which allows users to \n\nadd tasks \n\nedit them \n\nview them \n\nmark them as complete \n\nand \n\ndelete them."}}})();(function(){angular.module("letsdoitApp").filter("addHtmlLineBreaks",t);function t(){return function(t){var e=t.replace(/\n/g,"<br/>");console.log(e);return e}}})();(function(){angular.module("letsdoitApp").controller("taskCtrlDetailsEdit",t);function t(t,e){var r=this;r.listId=t.listId;e.taskById(r.listId).success(function(t){r.data={task:t};r.pageHeader={title:r.data.task.taskName}}).error(function(t){console.log(t)})}t.$inject=["$routeParams","letsdoitData"]})();(function(){var t=function(t,e){var r=this;r.formData={};r.modal={close:function(e){t.close(e)},cancel:function(){t.dismiss("cancel")}};r.onSubmit=function(){r.formError="";if(!r.formData.taskName||!r.formData.taskBody){r.formError="All fields are required.";return false}else{r.doAddNewTask(r.formData)}};r.doAddNewTask=function(t){e.addNewTask({taskName:t.taskName,taskBody:t.taskBody}).success(function(t){r.modal.close(t)}).error(function(t){r.formError="Your task could not be saved. Please try again."});return false}};t.$inject=["$uibModalInstance","letsdoitData"];angular.module("letsdoitApp").controller("addTaskModalCtrl",t)})();(function(){var t=function(t,e){var r=function(e){t.localStorage["letsdoit-token"]=e};var o=function(){return t.localStorage["letsdoit-token"]};var n=function(t){return e.post("/api/register",t).success(function(t){r(t.token)})};var a=function(t){return e.post("/api/login",t).success(function(t){r(t.token)})};var i=function(){t.localStorage.removeItem("letsdoit-token")};var l=function(){var e=o();if(e){var r=JSON.parse(t.atob(e.split(".")[1]));return r.exp>Date.now()/1e3}else{return false}};var s=function(){if(l()){var e=o();var r=JSON.parse(t.atob(e.split(".")[1]));return{email:r.email,name:r.name}}};return{saveToken:r,getToken:o,register:n,login:a,logout:i,isLoggedIn:l}};t.$inject=["$window","$http"];angular.module("letsdoitApp").service("authentication",t)})();(function(){var t=function(t,e){var r=this;r.pageHeader={title:"Create a new account"};r.credentials={name:"",email:"",password:""};r.returnPage=t.search().page||"/";r.onSubmit=function(){r.formError="";if(!r.credentials.name||!r.credentials.email||!r.credentials.password){r.formError="All fields are required.";return false}else{r.doRegister()}};r.doRegister=function(){r.formError="";e.register(r.credentials).error(function(t){r.formError=t}).then(function(){t.search("page",null);t.path(r.returnPage)})}};t.$inject=["$location","authentication"];angular.module("letsdoitApp").controller("registerCtrl",t)})();(function(){var t=function(t,e){var r=this;r.pageHeader={title:"Sign into Letsdoit"};r.credentials={name:"",email:"",password:""};r.returnPage=t.search().page||"/";r.onSubmit=function(){console.log(r.credentials);r.formError="";if(!r.credentials.email||!r.credentials.password){r.formError="All fields are required.";return false}else{r.doLogin()}};r.doLogin=function(){r.formError="";e.login(r.credentials).error(function(t){r.formError=t}).then(function(){t.search("page",null);t.path(r.returnPage)})}};t.$inject=["$location","authentication"];angular.module("letsdoitApp").controller("loginCtrl",t)})();(function(){function t(t,e){var r=this;r.currentPath=t.path();r.isLoggedIn=e.isLoggedIn();r.currentUser=e.currentUser();r.logout=function(){e.logout();t.path("/")}}t.$inject=["$location","authentication"];angular.module("letsdoitApp").controller("navigationCtrl",t)})();